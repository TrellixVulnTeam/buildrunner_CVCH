name: Build
on:
  - push
  - pull_request
jobs:
  test:
    # When running with act (https://github.com/nektos/act), these lines need to be appended with the ACT variable
    # to force each job to run
    if: github.repository == 'adobe/buildrunner'
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
        - 3.6
        - 3.7
        - 3.8
        - 3.9
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test_requirements.txt
    - name: Lint with pylint
      run: pylint buildrunner
    - name: Write SSH keys
      env:
        # These were generated with:
        # ssh-keygen -t rsa -b 4096 -m PEM -N ''
        # and then installed as a read-only deploy key on the buildrunner repository
        #
        # Since this is a public repository and the key provides the same rights that even anonymous users have,
        # this key is rather worthless and can be stored safely in code here. This *could* be used as a secret,
        # but since secrets are not available to forks, we cannot test SSH functionality in PRs which defeats
        # the purpose somewhat.
        DEPLOY_SSH_KEY: "-----BEGIN RSA PRIVATE KEY-----\n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\n-----END RSA PRIVATE KEY-----"
        DEPLOY_SSH_KEY_PUB: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDWO8RK9d0de8BdskwY6njUuNEwzHft/Ori+BoGt0IGsc3Z1bVrNqpu95i2nR56jw/zk4/iY3iz/m+V4w8GzxfdyBROh3lvLtwH7CToTjaUWO7nRvPZJDKkuTb8uNy0HhTUp/zYaIzHCCV/mzKeuDzSKLC/XAcmNwq/FgX9bWDG/C0s9ORAQoj5gzEFSIR3eVDLhdtBHJnzJHkEht5qPJjXehm8Dn4SBLM6mqme3Nuvf8jv7kkxsh8WmiKuWQZpAXGJbI3b/jbg4r3QXsRItj69i7j9F/QD72kMU1/KsEkOWhXQM3WlbfMwvkYIQ2Rl7wdpOeU2Mleqj+50cDVAuUtIoSi5KosO1yrBhp+fiMxQFjlsoiBGltGMptMnBuFizOHKLHxKoIOhsrqF0LkliY2T6arXVR/TcWSIrDVXpupnRidqGsRyEF2K79uEFxL97yqS1und+6jJ9DJ0fdoDkLZDN0OpcfQSSV37EhKpngFHgEl5fkm0JWSyBIT9KvAmkxW5mCMMYgOCBcqBAj+2UA/tkneR188/htrkyzqM7DDEDJX8J1HI6ACTfXn/uDRE5DWI5I0gt1+aQrK1Vf+xbmfnS65a4KykJAtvH5Y9I36Ri1Fa8CN0Yqav/DvVaCLgAFOKph7o61R9bEUu+ASW7D3zpAHmStS3Z86crfNK/7J4OQ== buildrunner@adobe"
      run: |
        mkdir -p ~/.ssh
        printf -- "$DEPLOY_SSH_KEY" > ~/.ssh/buildrunner-deploy-id_rsa
        printf -- "$DEPLOY_SSH_KEY_PUB" > ~/.ssh/buildrunner-deploy-id_rsa.pub
        chmod 700 ~/.ssh
        chmod 600 ~/.ssh/buildrunner-deploy-*
    - name: Test with pytest
      run: pytest -v --junitxml=test-reports/test-results.xml
    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action/composite@v1
      if: github.event_name == 'push' && always()
      with:
        files: test-reports/test-results.xml
        check_name: "Test Results ${{ matrix.python-version }}"
  publish-pypi:
    if: github.repository == 'adobe/buildrunner'
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
      with:
        # Fetch all history instead of the latest commit
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Remove version file
      # This is just in case something else created it, destroy it to get a fresh version
      run: rm -f buildrunner/version.py
    - name: Install wheel
      run: pip install wheel
    - name: Build
      run: python setup.py sdist bdist_wheel
    - name: Check upload
      run: pip install twine && twine check dist/*
    - name: Publish to PyPi
      uses: pypa/gh-action-pypi-publish@release/v1
      # Only publish on pushes to main
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        user: __token__
        password: ${{ secrets.ADOBE_BOT_PYPI_TOKEN }}
  publish-docker:
    if: github.repository == 'adobe/buildrunner'
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
      with:
        # Fetch all history instead of the latest commit
        fetch-depth: 0
    - name: Docker Tags
      id: docker_tags
      uses: docker/metadata-action@v3
      with:
        images: ghcr.io/adobe/buildrunner
        # Always include latest tag
        flavor: |
          latest=true
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      with:
        platforms: linux/amd64,linux/arm64
    # Buildx is used to build multi-platform images
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    # Login to the docker registry
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      # Only login if this a push to main
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and Push Image
      uses: docker/build-push-action@v2
      with:
        context: .
        # Only push images if this is a push to main
        push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
        platforms: linux/amd64,linux/arm64
        tags: ${{ steps.docker_tags.outputs.tags }}
        labels: ${{ steps.docker_tags.outputs.labels }}
